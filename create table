def generate_create_table_sql(row):
    """Generate SQL for creating a table based on the row."""
    table_name = row['Table Name']
    column_def = row['Column Name']
    constraint = row['Constraint']

    # Parse columns
    columns = column_def.split(",\n")  # Split by newlines
    columns = [col.strip().replace(": ", " ") for col in columns]  # Convert "ID: INT" -> "ID INT"

    # Handle constraints
    if constraint and "PK" in constraint:
        constraint_col = constraint.split(":")[0].strip()
        for i, col in enumerate(columns):
            if col.startswith(constraint_col):
                columns[i] += " PRIMARY KEY"

    # Generate SQL
    sql = f"CREATE TABLE {table_name} (\n    {',\n    '.join(columns)}\n);"
    return sql

# Example usage with the row data
row_data = {
    "Table Name": "TEST0001",
    "Column Name": "ID: INT,\nNAME: VARCHAR,\nPHONE: VARCHAR,\nEMAIL: VARCHAR",
    "Constraint": "ID: PK"
}

sql = generate_create_table_sql(row_data)
print(sql)
